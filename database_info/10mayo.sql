DELIMITER $$
CREATE PROCEDURE SP_AGREGAR_DUENOS(
    IN tipo_identificacion_desc VARCHAR(100),
    IN numero_identificacion VARCHAR(100),
    IN nombres VARCHAR(100),
    IN apellidos VARCHAR(100),
    IN direccion VARCHAR(200),
    IN barrio VARCHAR(100),
    IN email VARCHAR(150),
    IN telefono VARCHAR(100)
)
BEGIN
    DECLARE tipo_identificacion_id INT;
    
    -- Buscar el ID del tipo de identificación
    SELECT ID_TIPO_IDENTIFICACION INTO tipo_identificacion_id 
    FROM TIPO_IDENTIFICACION 
    WHERE DESCRIPCION = tipo_identificacion_desc;
    
    -- Insertar el dueño con el tipo de identificación
    INSERT INTO DUENOS(
        NUMERO_IDENTIFICACION, 
        NOMBRES, 
        APELLIDOS, 
        DIRECCION, 
        BARRIO, 
        EMAIL, 
        TELEFONO, 
        ID_TIPO_IDENTIFICACION
    )
    VALUES(
        numero_identificacion, 
        nombres, 
        apellidos, 
        direccion, 
        barrio, 
        email, 
        telefono, 
        tipo_identificacion_id
    );
END$$
DELIMITER ;

CALL SP_AGREGAR_DUENOS('CEDULA DE EXTRANJERIA', '123456789', 'Juan', 'Pérez', 'Calle 123', 'Barrio 1', 'juan.perez@gmail.com', '555-1234');


SELECT ID_RAZA, DESCRIPCION FROM raza;


DELIMITER //
CREATE PROCEDURE `SP_ACTUALIZAR_DUENOS` (
IN `NUMERO_IDENTIFICACION` VARCHAR(100),
IN `NOMBRES` VARCHAR(100),
IN `APELLIDOS` VARCHAR(100),
IN `BARRIO` VARCHAR(100),
IN `DIRECCION` VARCHAR(200),
IN `EMAIL` VARCHAR(150),
IN `TELEFONO` VARCHAR(100),
IN `ID_TIPO_IDENTIFICACION` INT,
IN `ID_DUENO` INT
)
COMMENT 'Procedimiento almacenado para actualizar dueños.'
BEGIN
UPDATE duenos 
SET NUMERO_IDENTIFICACION = NUMERO_IDENTIFICACION,NOMBRES= NOMBRES ,APELLIDOS = APELLIDOS ,BARRIO=BARRIO,DIRECCION=DIRECCION,EMAIL=EMAIL,TELEFONO=TELEFONO,ID_TIPO_IDENTIFICACION=ID_TIPO_IDENTIFICACION 
WHERE ID_DUENOS = ID_DUENO;
END//
DELIMITER ;

CALL SP_ACTUALIZAR_DUENOS('111111111','KevinPrueba','RestrepoPrueba','BARRIOPRUEBA','Cr prueba # prueba','kevinresca@prueba.com','318prueba123',1,5);


UPDATE duenos SET NUMERO_IDENTIFICACION = 3333, NOMBRES = 'PRUEBAUPDATEBD', APELLIDOS = 'PRUEBAUPDATEBD', BARRIO = 'BARRIOPRUEBA', DIRECCION = 'BARRIOPRUEBA', EMAIL = 'BARRIOPRUEBA@MAIL', TELEFONO = '499494BARRIOPRUEBA', ID_TIPO_IDENTIFICACION = 3 WHERE ID_DUENOS = 5

SELECT M.ID_MASCOTAS, M.NOMBRE, M.PESO, M.FECHA_NACIMIENTO, M.SEXO, R.DESCRIPCION AS RAZA, CONCAT(D.NOMBRES, ' ', D.APELLIDOS) AS DUENO FROM MASCOTAS M INNER JOIN RAZA R ON M.ID_RAZA = R.ID_RAZA INNER JOIN DUENOS_MASCOTAS DM ON M.ID_MASCOTAS = DM.ID_MASCOTAS INNER JOIN DUENOS D ON DM.ID_DUENOS = D.ID_DUENOS;

SELECT * FROM mascotas;

SELECT * FROM duenos;

SELECT ID_DUENOS, NUMERO_IDENTIFICACION, NOMBRES, APELLIDOS, BARRIO, DIRECCION, EMAIL, TELEFONO FROM duenos ORDER BY Id_duenos ASC;

INSERT INTO DUENOS(ID_TIPO_IDENTIFICACION, NUMERO_IDENTIFICACION, NOMBRES, APELLIDOS, DIRECCION, BARRIO, EMAIL, TELEFONO, )
    VALUES(
        3,
		  '3211213', 
        'FNOMBRESFFF', 
        'FAPELLIDOSFFF', 
        'FDIRECCIONFFF', 
        'FBARRIOFFF', 
        'FEMAILFFFF', 
        'FTELEFONOFFFF'
    );
    
    UPDATE DUENOS SET 
	 NOMBRES = '', 
	 APELLIDOS = IFNULL(?, APELLIDOS), 
	 BARRIO = IFNULL(?, BARRIO), 
	 DIRECCION = IFNULL(?, DIRECCION), 
	 EMAIL = IFNULL(?, EMAIL), 
	 TELEFONO = IFNULL(?, TELEFONO), 
	 ID_TIPO_IDENTIFICACION = IFNULL(?, ID_TIPO_IDENTIFICACION)
	 WHERE ID_DUENOS = 71
	 
	 
	 
	 INSERT INTO DUENOS (ID_TIPO_IDENTIFICACION, NUMERO_IDENTIFICACION, NOMBRES, APELLIDOS, DIRECCION, BARRIO, EMAIL, TELEFONO) VALUES (3, '3211213', 'FNOMBRESFFF', 'FAPELLIDOSFFF', 'FDIRECCIONFFF', 'FBARRIOFFF', 'FEMAILFFFF', 'FTELEFONOFFFF');


SELECT ID_TIPO_IDENTIFICACION, DESCRIPCION FROM tipo_identificacion;

SELECT ID_DUENOS, NUMERO_IDENTIFICACION, NOMBRES, APELLIDOS, DIRECCION, EMAIL, TELEFONO FROM duenos ORDER BY Id_duenos ASC

INSERT INTO DUENOS (ID_TIPO_IDENTIFICACION, NUMERO_IDENTIFICACION, NOMBRES, APELLIDOS, DIRECCION, EMAIL, TELEFONO) VALUES ( 3, 'docprueba22', 'nombreprueba', 'apellidoprueba', 'direccionprueba', '@mail', 'telefono333')


INSERT INTO DUENOS_MASCOTAS (ID_MASCOTAS,ID_DUENOS) VALUES (ID_MASCOTAS,ID_DUENOS)


INSERT INTO DUENOS (ID_TIPO_IDENTIFICACION, NUMERO_IDENTIFICACION, NOMBRES, APELLIDOS, DIRECCION, EMAIL, TELEFONO) VALUES ( 3, 'docprueba22', 'nombreprueba', 'apellidoprueba', 'direccionprueba', '@mail', 'telefono333');

INSERT INTO DUENOS_MASCOTAS (ID_MASCOTAS, ID_DUENOS) VALUES (LAST_INSERT_ID(), ID_MASCOTAS);


INSERT INTO DUENOS (ID_TIPO_IDENTIFICACION, NUMERO_IDENTIFICACION, NOMBRES, APELLIDOS, DIRECCION, EMAIL, TELEFONO) VALUES ( 3, 'docprueba22', 'nombreprueba', 'apellidoprueba', 'direccionprueba', '@mail', 'telefono333');

INSERT INTO DUENOS_MASCOTAS (ID_MASCOTAS, ID_DUENOS) VALUES (LAST_INSERT_ID(), ID_MASCOTAS);



INSERT INTO MASCOTAS (NOMBRE,PESO,FECHA_NACIMIENTO,SEXO,ID_RAZA )
VALUES ('SAMY','5 KG',STR_TO_DATE('17-06-2018','%d-%m-%Y'),'HEMBRA',153);

SET @ID_MASCOTA = LAST_INSERT_ID();

INSERT INTO DUENOS_MASCOTAS (ID_MASCOTAS,ID_DUENOS) VALUES (@ID_MASCOTA,5);

UPDATE citas SET FECHA = '2002-03-03' WHERE ID_CITAS = 1


UPDATE CITAS SET FECHA = '2002-03-03', HORA_INICIO = '03:03:03', HORA_FIN = '03:03:03',OBSERVACIONES = 'LOZICULON', ID_TIPO_CONSULTA = 5,ID_MASCOTAS = 3,ID_TRATAMIENTO = 3,ID_COD_DIAGNOSTICO_PRINCIPAL = 22,ID_COD_DIAGNOSTICO_SECUNDARIO = 21 WHERE ID_CITAS = 32;

ALTER TABLE duenos DROP COLUMN BARRIO;


ALTER TABLE mascotas ADD COLUMN ID_DUENO INTEGER;

ALTER TABLE mascotas ADD CONSTRAINT fk_mascotas_dueños FOREIGN KEY (ID_DUENO) REFERENCES duenos (ID_DUENOS);
    
UPDATE mascotas SET ID_DUENO = 1 WHERE ID_MASCOTAS = 1;
UPDATE mascotas SET ID_DUENO = 2 WHERE ID_MASCOTAS = 2;
UPDATE mascotas SET ID_DUENO = 3 WHERE ID_MASCOTAS = 3;
UPDATE mascotas SET ID_DUENO = 4 WHERE ID_MASCOTAS = 4;
UPDATE mascotas SET ID_DUENO = 5 WHERE ID_MASCOTAS = 5;
UPDATE mascotas SET ID_DUENO = 6 WHERE ID_MASCOTAS = 6;

DELETE FROM duenos WHERE ID_DUENOS >=7


SELECT M.ID_MASCOTAS,M.NOMBRE,M.FECHA_NACIMIENTO,M.SEXO,R.DESCRIPCION AS RAZA, CONCAT(D.NOMBRES,' ',D.APELLIDOS) AS NOMBRE_DUENO FROM mascotas M INNER JOIN raza R ON R.ID_RAZA = M.ID_RAZA INNER JOIN duenos D ON D.ID_DUENOS = M.ID_DUENO ORDER BY ID_MASCOTAS;


SELECT ID_TIPO_CONSULTA, NOMBRE_CONSULTA FROM tipo_consulta;

SELECT ID_MASCOTAS, NOMBRE FROM mascotas;

SELECT ID_TRATAMIENTO, DESCRIPCION FROM tratamiento;

SELECT ID_COD_DIAGNOSTICO, CODIGO FROM cod_diagnostico;


SELECT F.ID_FACTURACION, m.NOMBRE AS NOMBRE_MASCOTA, CONCAT(d.NOMBRES, ' ', d.APELLIDOS) AS NOMBRE_DUENO, f.DURACION, f.OBSERVACIONES, f.VALOR_TOTAL FROM FACTURACION f INNER JOIN CITAS c ON f.ID_CITAS = c.ID_CITAS INNER JOIN MASCOTAS m ON c.ID_MASCOTAS = m.ID_MASCOTAS INNER JOIN DUENOS d ON m.ID_DUENO = d.ID_DUENOS ORDER BY ID_FACTURACION ASC;


SELECT F.ID_FACTURACION, D.NUMERO_IDENTIFICACION, CONCAT(D.NOMBRES, ' ', D.APELLIDOS) AS NOMBRE_CLIENTE, M.NOMBRE AS NOMBRE_MASCOTA, D.BARRIO,D.EMAIL,D.TELEFONO, C.FECHA,F.DURACION, TC.NOMBRE_CONSULTA, C.OBSERVACIONES, F.VALOR_TOTAL FROM duenos D INNER JOIN mascotas M ON M.ID_DUENO = D.ID_DUENOS INNER JOIN citas C ON C.ID_MASCOTAS = M.ID_MASCOTAS INNER JOIN facturacion F ON F.ID_CITAS = C.ID_CITAS INNER JOIN tipo_consulta TC ON TC.ID_TIPO_CONSULTA = C.ID_TIPO_CONSULTA;


SELECT F.ID_FACTURACION, D.NUMERO_IDENTIFICACION, CONCAT(D.NOMBRES, ' ', D.APELLIDOS) AS NOMBRE_CLIENTE, M.NOMBRE AS NOMBRE_MASCOTA, D.DIRECCION,D.EMAIL,D.TELEFONO, C.FECHA,F.DURACION, TC.NOMBRE_CONSULTA, C.OBSERVACIONES, F.VALOR_TOTAL FROM duenos D INNER JOIN mascotas M ON M.ID_DUENO = D.ID_DUENOS INNER JOIN citas C ON C.ID_MASCOTAS = M.ID_MASCOTAS INNER JOIN facturacion F ON F.ID_CITAS = C.ID_CITAS INNER JOIN tipo_consulta TC ON TC.ID_TIPO_CONSULTA = C.ID_TIPO_CONSULTA ORDER BY F.ID_FACTURACION ASC;


SELECT f.ID_FACTURACION, d.NUMERO_IDENTIFICACION, CONCAT(d.NOMBRES, ' ', d.APELLIDOS) AS NOMBRE_COMPLETO, d.DIRECCION, d.BARRIO, d.EMAIL, d.TELEFONO, m.NOMBRE, m.PESO, m.SEXO, r.DESCRIPCION AS RAZA, c.FECHA, c.HORA_INICIO, c.HORA_FIN, f.ID_FACTURACION, f.DURACION, f.ESTADO_FACTURA, f.VALOR_TOTAL FROM DUENOS d INNER JOIN MASCOTAS m ON d.ID_DUENOS = m.ID_DUENO INNER JOIN RAZA r ON m.ID_RAZA = r.ID_RAZA INNER JOIN CITAS c ON m.ID_MASCOTAS = c.ID_MASCOTAS INNER JOIN FACTURACION f ON c.ID_CITAS = f.ID_CITAS ORDER BY f.ID_FACTURACION ASC;